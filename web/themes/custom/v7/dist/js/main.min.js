/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "/js/";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./src/js/main.js");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./src/js/main.js":
/*!************************!*\
  !*** ./src/js/main.js ***!
  \************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _sass_style_scss__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../sass/style.scss */ "./src/sass/style.scss");
/* harmony import */ var _sass_style_scss__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_sass_style_scss__WEBPACK_IMPORTED_MODULE_0__);
/* Main JS code */


(function ($, Drupal) {
  $(document).ready(function () {
    /**
     * 
     *  Scroll Offset for anchor links so section titles not hidden under fixed header
     * 
     */
    // $('header .menu a').on('click', function(e){
    //   e.preventDefault();
    //   var scrollAnchor = $(this).attr('href');
    //   var scrollTo = $(scrollAnchor);
    //   var headerHeight = $('header').height();
    //   console.log('scrollAnchor',scrollAnchor);
    //   $('html,body').animate({
    //     scrollTop: scrollTo.offset().top - headerHeight
    //   }, 'slow');
    // });

    /**
     * 
     * Master Scroll listener function for future development expansion.
     * All scroll listeners should be added here to benefit from rAF throttling & debouncing.
     * 
     */
    // set variables
    var latestKnownScrollY = 0,
        scrollTicking = false,
        header = document.getElementsByTagName('header')[0]; // Attach listener using browser compatabile methods

    if (window.addEventListener) {
      window.addEventListener('scroll', onScroll, false);
    } else {
      window.attachEvent('scroll', onScroll);
    } // Master scroll event listener function


    function onScroll() {
      latestKnownScrollY = window.pageYOffset;
      requestTick();
    } // tick function that wraps the animation effect functions. Used for debouncing the scroll listener


    function requestTick() {
      if (!scrollTicking) {
        // Use request animation frame with function callback to perform the animation
        // This method is the most performant by leveraging the native browser
        // API to synchronize the animation visual to browser render frame rate
        // for smoother animations with less memory overhead
        requestAnimationFrame(animationBehaviorCallback); // add additional scroll function effects here
      }

      scrollTicking = true;
    } // Rename this function and customize animation behavior


    function animationBehaviorCallback() {
      // reset the tick so we can
      // capture the next onScroll
      scrollTicking = false; // Add animation behavior here
    }
  });
  /**
   * 
   *  Function plugin for checking if element is visible in viewport
   *    Includes support for offset from top of bottom of viewport
   *    for more specific control of when to trigger callback behavior.
   * 
   */

  $.fn.isInViewport = function (options) {
    var settings = $.extend({
      // Set default top & bottom offsets to zero
      bottomOffset: 0,
      topOffset: 0
    }, options);
    var elementTop = $(this).offset().top;
    var elementBottom = elementTop + $(this).outerHeight();
    var viewportTop = $(window).scrollTop();

    if (settings.topOffset > 0) {
      viewportTop += settings.topOffset;
    }

    var viewportBottom = viewportTop + $(window).height();

    if (settings.bottomOffset > 0) {
      viewportBottom -= settings.bottomOffset;
    }

    return elementBottom > viewportTop && elementTop < viewportBottom;
  };
})(window.jQuery, window.Drupal);

/***/ }),

/***/ "./src/sass/style.scss":
/*!*****************************!*\
  !*** ./src/sass/style.scss ***!
  \*****************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// extracted by mini-css-extract-plugin

/***/ })

/******/ });
//# sourceMappingURL=data:application/json;charset=utf-8;base64,